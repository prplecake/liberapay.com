from liberapay.utils import get_participant

[---]

request.allow('GET', 'POST')

participant = get_participant(state, restrict=True)

if request.method == 'POST':
    body = request.body
    if body.get('mark_all_as_read') == 'true':
        last_seen = body.get_int('last_seen', default=0)
        participant.mark_notifications_as_read(until=last_seen)
    elif 'mark_as_read' in body:
        participant.mark_notification_as_read(body.get_int('mark_as_read'))
    elif 'restore' in body:
        participant.restore_notification(body.get_int('restore'))
    else:
        participant.remove_notification(body.get_int('remove'))
    response.redirect(request.line.uri)

title = participant.username
subhead = _("Notifications")

# The notifications use inline styles, tell the browser to accept them
csp = response.headers[b'Content-Security-Policy']
csp = csp.allow(b'style-src', b"'unsafe-inline'")
response.headers[b'Content-Security-Policy'] = csp

before = request.qs.get_int('before', default=None)
limit = 20

# NOTE: don't factor the render_notifications() call here, it'll break escaping

[---] application/json via json_dump
participant.render_notifications(state, before=before, limit=limit)

[---] text/html
% extends "templates/layouts/settings.html"

% block content
<form action="" method="POST">
    <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
    % set notifs = participant.render_notifications(state, before=before, limit=limit, viewer=user)
    % if notifs and not before
        % set last_seen = notifs[0].id
    % else
        % set last_seen = request.qs.get_int('last_seen', default=None)
    % endif
    % if last_seen
        <input type="hidden" name="last_seen" value="{{ last_seen }}" />
    % endif
    <button class="btn btn-primary" name="mark_all_as_read" value="true"
        {{ 'disabled' if participant.pending_notifs == 0 }}>{{
        _("Mark all notifications as read")
    }}</button><br>
    <br>
    % for notif in notifs
        <div class="alert alert-{{ notif.type|default('info') }} alert-notification {{ 'alert-read' if not notif.is_new else '' }}">
        % if notif.hidden_since and not user.is_acting_as('admin')
            <i>{{ _("This notification is marked for deletion.") }}</i>
            <button class="btn btn-default btn-xs pull-right" name="restore" value="{{ notif.id }}">{{
                _("Restore")
            }}</button>
        % else
            % set subject = notif.subject|default('', True)
            % set html = notif.html|default('')
            <h3 class="alert-header">
                <span class="title">{{ subject|safe }}</span>
                <small>{{ locale.format_datetime(notif.ts) if notif.ts }}</small>
                % if notif.hidden_since
                    <em class="text-muted">{{ _("This notification is marked for deletion.") }}</em>
                % endif
                <span class="actions">
                    % if notif.is_new
                    <button class="glyphicon glyphicon-eye-open hover-info" name="mark_as_read" value="{{ notif.id }}" title="{{
                            _('Mark as read') }}"></button>&nbsp;
                    % endif
                    % if not notif.hidden_since
                    <button class="glyphicon glyphicon-remove hover-danger" name="remove" value="{{ notif.id }}" title="{{
                            _('Remove') }}"></button>
                    % endif
                </span>
            </h3>
            <div class="alert-body">
            % if subject and html
                {{ html|safe }}
            % else
                <p><i>{{ _("An error occurred while rendering this notification.") }}</i></p>
                % if notif.sentry_ident
                    <p><i>{{ _(
                        "The details of this error have been recorded. If you decide to contact us, "
                        "please include the following error identification code in your message: {0}.",
                        '<code>%s</code>'|safe % notif.sentry_ident
                    ) }}</i></p>
                % endif
            % endif
            </div>
        % endif
        </div>
    % else
        <p>{{ _("No notifications to show.") }}</p>
    % endfor
    % if len(notifs) == limit
        <a class="btn btn-default" href="{{ request.qs.derive(before=notifs[-1].id, last_seen=last_seen) }}">{{
            _("Next Page â†’")
        }}</a>
    % endif
</form>
% endblock
